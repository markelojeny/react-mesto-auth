{"ast":null,"code":"export const BASE_URL = 'https://api.nomoreparties.co';\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    checkResponse(response);\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    checkResponse(response);\n  }).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res));\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","authorize","data","jwt","localStorage","setItem","checkToken","token"],"sources":["/Users/markelojeny/Desktop/react-mesto-auth/src/auth.js"],"sourcesContent":["export const BASE_URL = 'https://api.nomoreparties.co';\n\nconst checkResponse = (res) => {\n  if (res.ok) {\n      return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response) => {\n    checkResponse(response);\n  })\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response) => {\n    checkResponse(response);\n  })\n  .then((data) => {\n    if (data.jwt){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  })\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\" : `Bearer ${token}`\n      },\n  })\n      .then((res) => checkResponse(res));\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,8BAA8B;AAEtD,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAC7B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACrB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClBjB,aAAa,CAACiB,QAAQ,CAAC;EACzB,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGA,CAACV,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClBjB,aAAa,CAACiB,QAAQ,CAAC;EACzB,CAAC,CAAC,CACDD,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOd,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACjCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASY,KAAM;IACtC;EACJ,CAAC,CAAC,CACGR,IAAI,CAAEf,GAAG,IAAKD,aAAa,CAACC,GAAG,CAAC,CAAC;AACxC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}