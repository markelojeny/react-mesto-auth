{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _handleResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка в ${res.status}`);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        title: `${data.title}`,\n        link: `${data.link}`\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n  editUser(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${data.name}`,\n        about: `${data.about}`\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n  _addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n  _deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._deleteLike(cardId);\n    } else {\n      return this._setLike(cardId);\n    }\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n  changeAvatar(_ref) {\n    let {\n      avatar\n    } = _ref;\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${avatar}`\n      })\n    }).then(res => {\n      return this._handleResponse(res);\n    });\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-62',\n  headers: {\n    authorization: 'dee17758-01f3-41db-81d2-b39918f89271',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_handleResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","addCard","data","method","body","JSON","stringify","title","link","editUser","name","about","_addLike","cardId","_deleteLike","changeLikeCardStatus","isLiked","_setLike","deleteCard","id","changeAvatar","_ref","avatar","api","authorization"],"sources":["/Users/markelojeny/Desktop/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _handleResponse (res) {\n      return res.ok\n        ? res.json()\n        : Promise.reject(`Ошибка в ${res.status}`);\n    }\n    \n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n    }\n    \n    addCard(data) {\n        return fetch(`${this._url}/cards`, {\n          method: 'POST',\n          headers: this._headers,\n          body: JSON.stringify({\n            title: `${data.title}`,\n            link: `${data.link}`\n          })\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n    }\n\n    editUser(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n              name: `${data.name}`,\n              about: `${data.about}`\n            })\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n    }\n    \n    _addLike(cardId) {\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n          method: 'PUT',\n          headers: this._headers,\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n    }\n\n    _deleteLike(cardId) {\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n          method: 'DELETE',\n          headers: this._headers,\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._deleteLike(cardId)\n    } else {\n      return this._setLike(cardId)\n    }\n  }\n    \n    deleteCard(id) {\n        return fetch(`${this._url}/cards/${id}`, {\n          method: 'DELETE',\n          headers: this._headers,\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n    }\n    \n    changeAvatar({ avatar }) {\n        return fetch(`${this._url}/users/me/avatar`, {\n          method: 'PATCH',\n          headers: this._headers,\n          body: JSON.stringify({\n            avatar: `${avatar}`\n          })\n        })\n        .then((res) => {\n          return this._handleResponse(res)\n        });\n    }\n} \n\nconst api = new Api ({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-62',\n  headers: {\n    authorization: 'dee17758-01f3-41db-81d2-b39918f89271',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}